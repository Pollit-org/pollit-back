<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/Environment/Highlighting/HighlightingSourceSnapshotLocation/@EntryValue">C:\Users\MrFlow\AppData\Local\JetBrains\Rider2022.3\resharper-host\temp\Rider\vAny\CoverageData\_Pollit.-161142402\Snapshot\snapshot.utdcvr</s:String>
	<s:String x:Key="/Default/Environment/UnitTesting/UnitTestSessionStore/Sessions/=82f4c026_002D0652_002D4c8d_002Db460_002Daf29ab1daf8b/@EntryIndexedValue">&lt;SessionState ContinuousTestingIsOn="True" ContinuousTestingMode="1" IsActive="True" Name="All tests from UserTest.cs #2" xmlns="urn:schemas-jetbrains-com:jetbrains-ut-session"&gt;&#xD;
  &lt;Project Location="D:\Documents\Pollit\pollit-back" Presentation="&amp;lt;Tests&amp;gt;" /&gt;&#xD;
&lt;/SessionState&gt;</s:String>
	<s:String x:Key="/Default/Environment/UnitTesting/UnitTestSessionStore/Sessions/=c4809dee_002Dd4d9_002D4863_002D9980_002D8c6fb0f5ebb5/@EntryIndexedValue">&lt;SessionState ContinuousTestingMode="0" Name="All tests from UserTest.cs" xmlns="urn:schemas-jetbrains-com:jetbrains-ut-session"&gt;&#xD;
  &lt;ProjectFile&gt;188A0F38-EFC8-4D51-825C-A357EFC62211/d:Users/f:UserTest.cs&lt;/ProjectFile&gt;&#xD;
&lt;/SessionState&gt;</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=DC83F3F2163AC94DB0DFAE341CB6BBEA/Field/=NAMESPACE/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=DC83F3F2163AC94DB0DFAE341CB6BBEA/Field/=CLASS/@KeyIndexDefined">False</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=DC83F3F2163AC94DB0DFAE341CB6BBEA/Description/@EntryValue">&amp;Pollit Command Handler</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=DC83F3F2163AC94DB0DFAE341CB6BBEA/Text/@EntryValue">$HEADER$namespace $NAMESPACE$
{
  public class $COMMAND$CommandHandler
  {
    public async Task HandleAsync($COMMAND$Command command, I$COMMAND$Presenter presenter)
    {
        presenter.Success();
    }
  }
  
  public class $COMMAND$Command
  {
    public object $PROP$ { get; }
  }
  
  public interface I$COMMAND$Presenter
{
    void Success();
}</s:String>
	</wpf:ResourceDictionary>